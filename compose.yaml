services:
  cloud-metrics-generator:
    image: augustodsgv/cloud_metrics_generator
    environment:
      - INSTANCE_ID=123
      - TENANT_ID=4321
      - INSTANCE_REGION=us-west-2
      - INSTANCE_TYPE=K8SAAS
      - SCRAPE_INTERVAL=5
    networks:
      - prometheus-ring
    hostname: cloud-metrics-generator={{.Task.Slot}}
    deploy:
      mode: replicated
      replicas: 3

    networks:
      - prometheus-ring

  grafana:
    image: grafana/grafana:latest
    # pull_policy: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    volumes:
      # - ./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./mimir/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
    ports:
      - 9000:3000
    networks:
      - prometheus-ring

  operator:
    image: augustodsgv/prometheus-ring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - prometheus-ring
    ports:
      - "9988:9988"
    depends_on:
      - consul
      - load-balancer
    environment:
    - DOCKER_NETWORK=prometheus-ring_default
    
    - DOCKER_PROMETHEUS_IMAGE=prometheus-ring-node
    - API_ENDPOINT=operator
    - API_PORT=9988
    - NODE_CAPACITY=4
    - NODE_REPLICATION_NUM=3
    - NODE_MIN_LOAD=25
    - NODE_MAX_LOAD=75
    - NODE_SCRAPE_INTERVAL=5s

    - SD_PROVIDER=consul
    - SD_PORT=8500
    - SD_HOST=consul

    - LOG_LEVEL=DEBUG
    - METRICS_DATABASE_URL=load-balancer
    - METRICS_DATABASE_PORT=9009
    - METRICS_DATABASE_PATH=/api/v1/push
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mimir:
    # image: grafana/mimir:latest
    image: augustodsgv/custom-mimir:latest
    hostname: mimir-{{.Task.Slot}}
    ports:          # For test only, should not be exposed in production
      - "8080:8080"
    volumes:
      - ./mimir/mimir-template.yaml:/etc/mimir-template.yaml:ro
      # - ./mimir/mimir.yaml:/etc/mimir.yaml:ro
      - ./mimir/alertmanager.yaml:/etc/alertmanager-fallback-config.yaml:ro
      - mimir-data:/data
    networks:
      - prometheus-ring
    deploy:
      replicas: 3
      mode: replicated

      
  # load-balancer:
  #   image: nginx:latest
  #   volumes:
  #     - ./mimir/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - "mimir-1"
  #     - "mimir-2"
  #     - "mimir-3"
  #   ports:
  #     - "9009:9009"
  #   networks:
  #     - prometheus-ring


  # mimir-1:
  #   image: augustodsgv/custom-mimir:latest
  #   hostname: mimir-1
  #   volumes:
  #     - ./mimir/mimir-template.yaml:/etc/mimir-template.yaml:ro
  #     - ./mimir/alertmanager.yaml:/etc/alertmanager-fallback-config.yaml:ro
  #     - mimir-data:/data
  #   networks:
  #     - prometheus-ring

  # mimir-2:
  #   image: augustodsgv/custom-mimir:latest
  #   hostname: mimir-2
  #   volumes:
  #     - ./mimir/mimir-template.yaml:/etc/mimir-template.yaml:ro
  #     - ./mimir/alertmanager.yaml:/etc/alertmanager-fallback-config.yaml:ro
  #     - mimir-data:/data
  #   networks:
  #     - prometheus-ring

  # mimir-3:
  #   image: augustodsgv/custom-mimir:latest
  #   hostname: mimir-3
  #   volumes:
  #     - ./mimir/mimir-template.yaml:/etc/mimir-template.yaml:ro
  #     - ./mimir/alertmanager.yaml:/etc/alertmanager-fallback-config.yaml:ro
  #     - mimir-data:/data
  #   networks:
  #     - prometheus-ring

  minio:
    image: minio/minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data
    networks:
      - prometheus-ring

  consul:
    image: hashicorp/consul
    ports:
      - "8500:8500"
    networks:
      - prometheus-ring

volumes:
  mimir-data:
  minio-data:

networks:
  prometheus-ring:
    name:  prometheus-ring